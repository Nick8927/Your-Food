from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder
from database.utils import db_get_all_category, db_get_finally_price, db_get_product, db_get_addons_by_product


def generate_category_menu(chat_id):
    """
    –≥–µ–Ω–µ—Ä–∞—Ü–∏—è inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏ —Ç–æ–≤–∞—Ä–æ–≤.

    :param chat_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—É–º–º—ã –∫–æ—Ä–∑–∏–Ω—ã.
    :return: InlineMarkup —Å –∫–Ω–æ–ø–∫–∞–º–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∏ –∫–æ—Ä–∑–∏–Ω–∫–∏.
    """
    categories = db_get_all_category()
    total_price = db_get_finally_price(chat_id)

    builder = InlineKeyboardBuilder()
    builder.button(
        text=f'–ö–æ—Ä–∑–∏–Ω–∞ –∑–∞–∫–∞–∑–∞ ({total_price if total_price else 0} —Ä—É–±–ª–µ–π)',
        callback_data='–ö–æ—Ä–∑–∏–Ω–∞ –∑–∞–∫–∞–∑–∞'
    )

    [builder.button(text=category.category_name, callback_data=f'category_{category.id}')
     for category in categories]

    builder.adjust(1, 2)
    return builder.as_markup()


def show_product_by_category(category_id: int) -> InlineKeyboardMarkup:
    """–∫–Ω–æ–ø–∫–∞ –¥–ª—è –ø–æ–∫–∞–∑–∞ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º"""
    products = db_get_product(category_id)
    builder = InlineKeyboardBuilder()
    [builder.button(text=product.product_name, callback_data=f'product_view_{product.id}') for product in products]
    builder.adjust(2)
    builder.row(
        InlineKeyboardButton(text="‚¨Ö –ù–∞–∑–∞–¥", callback_data='return_to_category')
    )
    return builder.as_markup()


def quantity_cart_controls(quantity=1) -> InlineKeyboardMarkup:
    """–∫–Ω–æ–ø–∫–∞ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ç–æ–≤–∞—Ä–∞ –≤ –∫–æ—Ä–∑–∏–Ω–µ"""
    builder = InlineKeyboardBuilder()
    builder.button(text='‚ûñ', callback_data='action -')
    builder.button(text=str(quantity), callback_data='quantity')
    builder.button(text='‚ûï', callback_data='action +')
    builder.button(text='–ü–æ–ª–æ–∂–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É  üõí', callback_data='–ø–æ–ª–æ–∂–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É')
    builder.adjust(3, 1)
    return builder.as_markup(resize_keyboard=True)


def cart_actions_keyboard() -> InlineKeyboardMarkup:
    """–∫–Ω–æ–ø–∫–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è/—É–¥–∞–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞ –≤ –∫–æ—Ä–∑–∏–Ω—É"""
    builder = InlineKeyboardBuilder()

    builder.row(
        InlineKeyboardButton(text='üì¶ –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑', callback_data='confirm_order'),
        InlineKeyboardButton(text='‚ûñ –£–±—Ä–∞—Ç—å —Ç–æ–≤–∞—Ä', callback_data='choose_to_remove'),
        InlineKeyboardButton(text='‚ûï –î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä', callback_data='choose_to_add')
    )
    builder.adjust(1, 2)

    return builder.as_markup()


def get_settings_keyboard() -> InlineKeyboardMarkup:
    """–∫–Ω–æ–ø–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
    builder = InlineKeyboardBuilder()
    builder.button(text="üåê –°–º–µ–Ω–∏—Ç—å —è–∑—ã–∫", callback_data="change_language")
    builder.button(text="üóë –£–¥–∞–ª–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç", callback_data="delete_account")
    builder.button(text="‚Ü©Ô∏è –ù–∞–∑–∞–¥", callback_data="back_to_menu")
    builder.adjust(1)
    return builder.as_markup()


def get_language_keyboard() -> InlineKeyboardMarkup:
    """–∫–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞ —è–∑—ã–∫–∞"""
    builder = InlineKeyboardBuilder()
    builder.button(text="üá∑üá∫ –†—É—Å—Å–∫–∏–π", callback_data="lang_ru")
    builder.button(text="üá¨üáß English", callback_data="lang_en")
    builder.button(text="‚Ü©Ô∏è –ù–∞–∑–∞–¥", callback_data="settings_menu")
    builder.adjust(1)
    return builder.as_markup()


def get_delete_confirm_keyboard() -> InlineKeyboardMarkup:
    """–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞"""
    builder = InlineKeyboardBuilder()
    builder.button(text="‚úÖ –î–∞, —É–¥–∞–ª–∏—Ç—å", callback_data="confirm_delete")
    builder.button(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="settings_menu")
    builder.adjust(1)
    return builder.as_markup()


def generate_addons_keyboard(product_id: int) -> InlineKeyboardMarkup:
    """–í—ã–±–æ—Ä –∏ —É–¥–∞–ª–µ–Ω–∏–µ –¥–æ–±–∞–≤–æ–∫ –∫ —Ç–æ–≤–∞—Ä—É"""
    addons = db_get_addons_by_product(product_id)
    builder = InlineKeyboardBuilder()

    for addon in addons:
        builder.button(
            text=f"‚ûï {addon.name} (+{addon.price} BYN)",
            callback_data=f"addon_{addon.id}"
        )
        builder.button(
            text=f"‚ûñ –£–¥–∞–ª–∏—Ç—å {addon.name}",
            callback_data=f"remove_addon_{addon.id}"
        )

    builder.button(text="‚úÖ –ë–µ–∑ –¥–æ–±–∞–≤–æ–∫", callback_data="no_addon")
    builder.adjust(1)
    return builder.as_markup()


def generate_addons_option_buttons(product_id: int) -> InlineKeyboardMarkup:
    """–ö–Ω–æ–ø–∫–∞ –≤—ã–±–æ—Ä–∞ –¥–æ–ø–æ–≤"""
    builder = InlineKeyboardBuilder()
    builder.button(text="‚ûï –í—ã–±—Ä–∞—Ç—å –¥–æ–±–∞–≤–∫—É", callback_data=f"product_{product_id}")
    builder.button(text="‚¨Ö –ù–∞–∑–∞–¥", callback_data="return_to_category")
    builder.adjust(1)
    return builder.as_markup()


def generate_back_to_menu_keyboard() -> InlineKeyboardMarkup:
    """–ö–Ω–æ–ø–∫–∞ –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –ø–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞ –¥–æ–±–∞–≤–∫–∏"""
    builder = InlineKeyboardBuilder()
    builder.button(text="‚¨Ö –ù–∞–∑–∞–¥", callback_data="return_to_category")
    return builder.as_markup()

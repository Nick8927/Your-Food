from aiogram import Router, F, Bot
from aiogram.types import CallbackQuery

from database.utils import db_get_user_cart, db_upsert_final_cart_item
from handlers.h5_navigation_handlers import return_to_category_menu

router = Router()


@router.callback_query(F.data == '–ø–æ–ª–æ–∂–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É')
async def add_to_cart(callback: CallbackQuery, bot: Bot):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–ü–æ–ª–æ–∂–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É'"""
    chat_id = callback.from_user.id
    message = callback.message

    caption = message.caption
    if not caption:
        await bot.send_message(chat_id=chat_id, text="–û—à–∏–±–∫–∞: —Ç–æ–≤–∞—Ä –Ω–µ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω.")
        return

    product_name = caption.split('\n')[0]
    cart = db_get_user_cart(chat_id)

    if not cart:
        await bot.send_message(chat_id=chat_id, text="–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–≤–∞—Ä.")
        return

    try:
        await bot.delete_message(chat_id=chat_id, message_id=message.message_id + 1)
    except Exception as e:
        print(f"[!] –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –¥–æ–±–∞–≤–∫–∞–º–∏: {e}")
    try:
        await bot.delete_message(chat_id=chat_id, message_id=message.message_id)
    except Exception as e:
        print(f"[!] –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø—Ä–æ–¥—É–∫—Ç–æ–º: {e}")

    result = db_upsert_final_cart_item(
        cart_id=cart.id,
        product_name=product_name,
        total_products=cart.total_products,
        total_price=cart.total_price
    )

    match result:
        case 'inserted':
            await bot.send_message(chat_id=chat_id, text='–ü—Ä–æ–¥—É–∫—Ç –¥–æ–±–∞–≤–ª–µ–Ω ‚úÖ')
        case 'updated':
            await bot.send_message(chat_id=chat_id, text='–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–∑–º–µ–Ω–µ–Ω–æ üí´')
        case 'error':
            await bot.send_message(chat_id=chat_id, text='–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ ‚ùå')

    await return_to_category_menu(message, bot)

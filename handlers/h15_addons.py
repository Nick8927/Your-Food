from aiogram import Router, F
from aiogram.types import CallbackQuery
from keyboards.inline import generate_addons_keyboard

router = Router()


@router.callback_query(F.data.startswith("product_"))
async def handle_product_selected(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ –¥–æ–±–∞–≤–∫–∏ –¥–ª—è —Ç–æ–≤–∞—Ä–∞"""
    product_id = int(callback.data.split("_")[1])
    await callback.message.edit_text(
        "–í—ã–±–µ—Ä–∏—Ç–µ –¥–æ–±–∞–≤–∫—É –¥–ª—è —Ç–æ–≤–∞—Ä–∞ (–∏–ª–∏ –æ—Ç–∫–∞–∂–∏—Ç–µ—Å—å):",
        reply_markup=generate_addons_keyboard(product_id)
    )
    await callback.answer()


@router.callback_query(F.data.startswith("addon_"))
async def handle_addon_selected(callback: CallbackQuery):
    """–¥–æ–±–∞–≤–∏—Ç—å –¥–æ–±–∞–≤–∫—É –∫ —Ç–æ–≤–∞—Ä—É"""
    addon_id = int(callback.data.split("_")[1])

    await callback.message.edit_text(f"üß© –î–æ–±–∞–≤–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞! ID: {addon_id}")
    await callback.answer()


@router.callback_query(F.data == "no_addon")
async def handle_no_addon(callback: CallbackQuery):
    """–æ—Ç–∫–∞–∑–∞—Ç—å—Å—è –æ—Ç –¥–æ–±–∞–≤–æ–∫"""
    await callback.message.edit_text("–í—ã –≤—ã–±—Ä–∞–ª–∏ —Ç–æ–≤–∞—Ä –±–µ–∑ –¥–æ–±–∞–≤–æ–∫.")
    await callback.answer()
